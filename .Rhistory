install.packages("ggplot2")
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test", "fifer", "foreign", "psych", "ggnetwork", "ggthemes", "knitr", "NLP", "pander", "plyr", "RColorBrewer", "reshape2", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test",
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test", "fifer", "foreign", "psych", "ggnetwork", "ggthemes", "knitr", "NLP", "pander", "plyr", "RColorBrewer", "reshape2", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test",
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test", "fifer", "foreign", "psych", "ggnetwork", "ggthemes", "knitr", "NLP", "pander", "plyr", "RColorBrewer", "reshape2", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("car", "d3Network", "devtools", "dplyr", "dunn.test",
)
install.packages("car")
install.packages("d3Network")
install.packages(c(devtools", "dplyr", "dunn.test"))
install.packages(c("devtools", "dplyr", "dunn.test"))
install.packages(c("dplyr", "dunn.test", "fifer"))
install.packages(c("foreign", "psych", "ggnetwork", "ggthemes", "knitr", "NLP", "pander", "plyr", "RColorBrewer", "reshape2", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("foreign", "psych", "ggnetwork", "ggthemes",
install.packages(c("foreign", "psych", "ggnetwork"))
install.packages(c("ggthemes", "knitr", "NLP"))
install.packages(c("pander", "plyr", "reshape2", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("pander", "plyr", "shiny", "scales", "scholar", "SnowballC", "stats"))
install.packages(c("pander", "plyr", "shiny", "scales", "scholar", "SnowballC"))
pie
?pie
library(SPARQL)
endpoint <- "http://45.78.35.217:8890/sparql"
q <- "prefix shl: <http://www.library.sh.cn/ontology/>
prefix bf: <http://bibframe.org/vocab/>
select distinct ?s ?name ?label ?count
where {
?s ?p ?name . filter strstarts(str(?name), str(?label))
{service <http://data.library.sh.cn:8890/sparql> {
select ?fn ?label (count(distinct ?s) as ?count) from <http://gen.library.sh.cn/graph/person>
where {
?s foaf:familyName ?fn ; shl:roleOfFamily ?role .
{select ?fn ?label from <http://gen.library.sh.cn/graph/baseinfo> where {
?fn bf:label ?label. filter (lang(?label)='chs')
}}
} order by desc(?count)
}}
}  limit 10"
prefix <- c("lop","http://semanticweb.cs.vu.nl/poseidon/ns/instances/",
"eez","http://semanticweb.cs.vu.nl/poseidon/ns/eez/")
res <- SPARQL(endpoint,q,prefix)$results
res
plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count))
library(ggplot2)
plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count))
plot
plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity")
plot
install.packages("Cairo")
?plot
plot(graph_plot)
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity")
plot(graph_plot)
plot(graph_plot, family = "simsun")
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme_text(family=’STKaiti’)
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme_text(family="STKaiti")
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(text = element_text(family="STKaiti"))
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(text = element_text(family="STKaiti")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(text = element_text(family="YouYuan")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(text = element_text(family="Simsun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(text = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.title.x = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.tick.x = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.x = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
res <- sort(res$count, decreasing = T)
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
res
?sort
res$count
?order
res <- res[order(res$count, decreasing = T)]
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
res <- res[order(res$count, decreasing = T),]
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
res <- res[order(res$count, decreasing = T),]
res
res <- SPARQL(endpoint,q,prefix)$results
res <- res[order(res$count, decreasing = T),]
graph_plot <- ggplot(data = res) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
res
res <- SPARQL(endpoint,q,prefix)$results
graph_plot <- ggplot(data =  res[order(res$count, decreasing = T),]) +
geom_bar(aes(x = name, y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data =  res) +
geom_bar(aes(x = reorder(name, -count), y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data =  res) +
geom_bar(aes(x = reorder(name, count), y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
coord_flip()
graph_plot
graph_plot <- ggplot(data =  res) +
geom_bar(aes(x = reorder(name, count), y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
labs(title = "Count by name", x = "Count", y = "Name") +
coord_flip()
graph_plot
graph_plot <- ggplot(data =  res) +
geom_bar(aes(x = reorder(name, count), y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
labs(title = "Count by name", x = "Name", y = "Count") +
coord_flip()
graph_plot
graph_plot <- ggplot(data =  res) +
geom_bar(aes(x = reorder(name, count), y = count), stat = "identity") +
theme(axis.text.y = element_text(family="SimSun")) +
labs(title = "Frequency of instance by name", x = "Name", y = "Count") +
coord_flip()
graph_plot
setwd("~/Documents/Github/Info813")
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(psych)
library(mlogit)
library(usdm)
data <- read.table("cmc.data.txt", sep = ",")
output <- as.data.frame(data)
colnames(output) <- c("age", "education_w", "education_h", "child", "religion", "working", "occupation_h", "SII", "media", "method")
describeBy(output, group = output$method)
output[,2] <- as.factor(output[,2])
output[,3] <- as.factor(output[,3])
output[,5] <- as.factor(output[,5])
output[,6] <- as.factor(output[,6])
output[,7] <- as.factor(output[,7])
output[,8] <- as.factor(output[,8])
output[,9] <- as.factor(output[,9])
output[,10] <- as.factor(output[,10])
lm.model <- glm(method ~ age + child + religion + education_w + education_h + working + occupation_h,
data = output)
vif(lm.model)
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(psych)
library(mlogit)
library(usdm)
data <- read.table("cmc.data.txt", sep = ",")
output <- as.data.frame(data)
colnames(output) <- c("age", "education_w", "education_h", "child", "religion", "working", "occupation_h", "SII", "media", "method")
install.packages("usdm")
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(psych)
library(mlogit)
library(usdm)
data <- read.table("cmc.data.txt", sep = ",")
output <- as.data.frame(data)
colnames(output) <- c("age", "education_w", "education_h", "child", "religion", "working", "occupation_h", "SII", "media", "method")
lm.model <- glm(method ~ age + child + religion + education_w + education_h + working + occupation_h,
data = output)
vif(lm.model)
mldata <- mlogit.data(data = output,
choice = "method",
shape = "wide")
model <- mlogit(method ~ 1 | age + child + religion + education_w + education_h + working + occupation_h,
data = mldata,
shape = "long",
alt.var = "alt",
alt.levels = c("No", "Long", "Short"),
reflevel = "No")
summary(model)
model.2 <- mlogit(method ~ 1 | age + child + religion + education_w + education_h,
data = mldata,
shape = "long",
alt.var = "alt",
alt.levels = c("No", "Long", "Short"),
reflevel = "No")
summary(model.2)
model.3 <- mlogit(method ~ 1 | religion,
data = mldata,
shape = "long",
alt.var = "alt",
alt.levels = c("No", "Long", "Short"),
reflevel = "No")
summary(model.3)
