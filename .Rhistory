?Rfacebook
??Rfacebook
install.packages("twitteR")
setwd("~/Documents/Github/Info813")
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(lavaan)
library(semPlot)
library(pander)
data <- read.spss("MATH_ATTITUDE.sav")
output <- data.frame(data)
colnames(output) <- c("ID", "X1", "X2", "X3", "X1a", "X2a", "X3a", "Y1", "Y2", "Y3", "score")
output[,1] <- as.factor(output[,1])
par(mfrow = c(2, 5))
plot(as.factor(output[,2]))
plot(as.factor(output[,3]))
plot(as.factor(output[,4]))
plot(as.factor(output[,5]))
plot(as.factor(output[,6]))
plot(as.factor(output[,7]))
plot(as.factor(output[,8]))
plot(as.factor(output[,9]))
plot(as.factor(output[,10]))
hist(output[,11], breaks = 30)
par(mfrow = c(5, 2))
plot(as.factor(output[,2]))
plot(as.factor(output[,3]))
plot(as.factor(output[,4]))
plot(as.factor(output[,5]))
plot(as.factor(output[,6]))
plot(as.factor(output[,7]))
plot(as.factor(output[,8]))
plot(as.factor(output[,9]))
plot(as.factor(output[,10]))
hist(output[,11], breaks = 30)
model <- "
# measurement model
att1 =~ X1 + X2 + X3
att2 =~ X1a + X2a + X3a
eval =~ Y1 + Y2 + Y3
# regression model
att2 ~ att1
eval ~ att1 + att2
# residuals
X1 ~~ X1a
X2 ~~ X2a
X3 ~~ X3a
X1 ~~ 1 * X1
X2 ~~ 1 * X2
X3 ~~ 1 * X3
X1a ~~ 1 * X1a
X2a ~~ 1 * X2a
X3a ~~ 1 * X3a
Y1 ~~ 1 * Y1
Y2 ~~ 1 * Y2
Y3 ~~ 1 * Y3
"
fit <- sem(model, data = output)
fit_value <- fitMeasures(fit)
summary(fit, standardized = T)
fit_sum <- parameterEstimates(fit)
report.table <- data.frame(Measures = c("p.value", "CFI", "TLI", "RMSEA"),
Values = c(fit_value[5], fit_value[9], fit_value[10], fit_value[23]),
row.names = 1:4)
pander(report.table)
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
splitindex <- sample(index, trunc(length(index)/2))
set1 <- dataframe[splitindex, ]
set2 <- dataframe[-splitindex, ]
list(set1=set1,set2=set2)
}
splits <- splitdf(output, seed = 100)
str(splits)
lapply(splits, nrow)
lapply(splits, head)
set1 <- splits$set1
set2 <- splits$set2
set.table <- data.frame(Set = c("Set 1", "Set 2"),
Sample = c(nrow(set1), nrow(set2)),
Mean.score = c(mean(set1$score), mean(set2$score)))
pander(set.table)
fit.1 <- sem(model, data = set1)
fit.2 <- sem(model, data = set2)
fit.1.sum <- fitMeasures(fit.1)
fit.2.sum <- fitMeasures(fit.2)
fit.1.value <- parameterEstimates(fit.1)
fit.2.value <- parameterEstimates(fit.2)
result.table.1 <- data.frame(
Set = c("Whole", "Set 1", "Set 2"),
p.value = c(fit_value[5], fit.1.sum[5], fit.2.sum[5]),
CFI = c(fit_value[9], fit.1.sum[9], fit.2.sum[9]),
TLI = c(fit_value[10], fit.1.sum[10], fit.2.sum[10]),
RMSEA = c(fit_value[23], fit.1.sum[23], fit.2.sum[23]),
Att1.Eval.coef = c(fit_sum[11,4], fit.1.value[11,4], fit.2.value[11,4]),
Att1.Eval.z = c(fit_sum[11,6], fit.1.value[11,6], fit.2.value[11,6]),
Att1.Eval.p = c(fit_sum[11,7], fit.1.value[11,7], fit.2.value[11,7]),
Att2.Eval.coef = c(fit_sum[12,4], fit.1.value[12,4], fit.2.value[12,4]),
Att2.Eval.z = c(fit_sum[12,6], fit.1.value[12,6], fit.2.value[12,6]),
Att2.Eval.p = c(fit_sum[12,7], fit.1.value[12,7], fit.2.value[12,7])
)
result.table.1[,2:11] <- round(result.table.1[,2:11], digits = 3)
pander(result.table.1)
report.table <- data.frame(Measures = c("p.value", "CFI", "TLI", "RMSEA"),
Values = c(fit_value[5], fit_value[9], fit_value[10], fit_value[23]),
row.names = 1:4)
pander(report.table)
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
splitindex <- sample(index, trunc(length(index)/2))
set1 <- dataframe[splitindex, ]
set2 <- dataframe[-splitindex, ]
list(set1=set1,set2=set2)
}
splits <- splitdf(output, seed = 100)
str(splits)
lapply(splits, nrow)
lapply(splits, head)
set1 <- splits$set1
set2 <- splits$set2
set.table <- data.frame(Set = c("Set 1", "Set 2"),
Sample = c(nrow(set1), nrow(set2)),
Mean.score = c(mean(set1$score), mean(set2$score)))
pander(set.table)
fit.1 <- sem(model, data = set1)
fit.2 <- sem(model, data = set2)
fit.1.sum <- fitMeasures(fit.1)
fit.2.sum <- fitMeasures(fit.2)
fit.1.value <- parameterEstimates(fit.1)
fit.2.value <- parameterEstimates(fit.2)
result.table.1 <- data.frame(
Set = c("Whole", "Set 1", "Set 2"),
p.value = c(fit_value[5], fit.1.sum[5], fit.2.sum[5]),
CFI = c(fit_value[9], fit.1.sum[9], fit.2.sum[9]),
TLI = c(fit_value[10], fit.1.sum[10], fit.2.sum[10]),
RMSEA = c(fit_value[23], fit.1.sum[23], fit.2.sum[23]),
Att1.Eval.coef = c(fit_sum[11,4], fit.1.value[11,4], fit.2.value[11,4]),
Att1.Eval.z = c(fit_sum[11,6], fit.1.value[11,6], fit.2.value[11,6]),
Att1.Eval.p = c(fit_sum[11,7], fit.1.value[11,7], fit.2.value[11,7]),
Att2.Eval.coef = c(fit_sum[12,4], fit.1.value[12,4], fit.2.value[12,4]),
Att2.Eval.z = c(fit_sum[12,6], fit.1.value[12,6], fit.2.value[12,6]),
Att2.Eval.p = c(fit_sum[12,7], fit.1.value[12,7], fit.2.value[12,7])
)
result.table.1[,2:11] <- round(result.table.1[,2:11], digits = 3)
pander(result.table.1)
install.packages("rcrossref")
library(rcrossref)
?rcrossref
cr_ft_links(doi = "10.5555/515151", "pdf")
library(devtools)
install_github("cboettig/knitcitations")
options("citation_format" = "pandoc")
model <- "
# measurement model
att1 =~ X1 + X2 + X3
att2 =~ X1a + X2a + X3a
eval =~ Y1 + Y2 + Y3
# regression model
att2 ~ att1
eval ~ att1 + att2
# residuals
X1 ~~ X1a
X2 ~~ X2a
X3 ~~ X3a
X1 ~~ 1 * X1
X2 ~~ 1 * X2
X3 ~~ 1 * X3
X1a ~~ 1 * X1a
X2a ~~ 1 * X2a
X3a ~~ 1 * X3a
Y1 ~~ 1 * Y1
Y2 ~~ 1 * Y2
Y3 ~~ 1 * Y3
"
fit <- sem(model, data = output)
fit_value <- fitMeasures(fit)
summary(fit, standardized = T)
fit_sum <- parameterEstimates(fit)
fit.1 <- sem(model, data = set1)
fit.2 <- sem(model, data = set2)
fit.1.sum <- fitMeasures(fit.1)
fit.2.sum <- fitMeasures(fit.2)
fit.1.value <- parameterEstimates(fit.1)
fit.2.value <- parameterEstimates(fit.2)
result.table.1 <- data.frame(
Set = c("Whole", "Set 1", "Set 2"),
p.value = c(fit_value[5], fit.1.sum[5], fit.2.sum[5]),
CFI = c(fit_value[9], fit.1.sum[9], fit.2.sum[9]),
TLI = c(fit_value[10], fit.1.sum[10], fit.2.sum[10]),
RMSEA = c(fit_value[23], fit.1.sum[23], fit.2.sum[23]),
Att1.Eval.coef = c(fit_sum[11,4], fit.1.value[11,4], fit.2.value[11,4]),
Att1.Eval.z = c(fit_sum[11,6], fit.1.value[11,6], fit.2.value[11,6]),
Att1.Eval.p = c(fit_sum[11,7], fit.1.value[11,7], fit.2.value[11,7]),
Att2.Eval.coef = c(fit_sum[12,4], fit.1.value[12,4], fit.2.value[12,4]),
Att2.Eval.z = c(fit_sum[12,6], fit.1.value[12,6], fit.2.value[12,6]),
Att2.Eval.p = c(fit_sum[12,7], fit.1.value[12,7], fit.2.value[12,7])
)
result.table.1[,2:11] <- round(result.table.1[,2:11], digits = 3)
pander(result.table.1)
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
splitindex <- sample(index, trunc(length(index)/2))
set1 <- dataframe[splitindex, ]
set2 <- dataframe[-splitindex, ]
list(set1=set1,set2=set2)
}
splits <- splitdf(output, seed = 1001)
str(splits)
lapply(splits, nrow)
lapply(splits, head)
set1 <- splits$set1
set2 <- splits$set2
set.table <- data.frame(Set = c("Set 1", "Set 2"),
Sample = c(nrow(set1), nrow(set2)),
Mean.score = c(mean(set1$score), mean(set2$score)))
pander(set.table)
fit.1 <- sem(model, data = set1)
fit.2 <- sem(model, data = set2)
fit.1.sum <- fitMeasures(fit.1)
fit.2.sum <- fitMeasures(fit.2)
fit.1.value <- parameterEstimates(fit.1)
fit.2.value <- parameterEstimates(fit.2)
result.table.1 <- data.frame(
Set = c("Whole", "Set 1", "Set 2"),
p.value = c(fit_value[5], fit.1.sum[5], fit.2.sum[5]),
CFI = c(fit_value[9], fit.1.sum[9], fit.2.sum[9]),
TLI = c(fit_value[10], fit.1.sum[10], fit.2.sum[10]),
RMSEA = c(fit_value[23], fit.1.sum[23], fit.2.sum[23]),
Att1.Eval.coef = c(fit_sum[11,4], fit.1.value[11,4], fit.2.value[11,4]),
Att1.Eval.z = c(fit_sum[11,6], fit.1.value[11,6], fit.2.value[11,6]),
Att1.Eval.p = c(fit_sum[11,7], fit.1.value[11,7], fit.2.value[11,7]),
Att2.Eval.coef = c(fit_sum[12,4], fit.1.value[12,4], fit.2.value[12,4]),
Att2.Eval.z = c(fit_sum[12,6], fit.1.value[12,6], fit.2.value[12,6]),
Att2.Eval.p = c(fit_sum[12,7], fit.1.value[12,7], fit.2.value[12,7])
)
result.table.1[,2:11] <- round(result.table.1[,2:11], digits = 3)
pander(result.table.1)
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
splitindex <- sample(index, trunc(length(index)/2))
set1 <- dataframe[splitindex, ]
set2 <- dataframe[-splitindex, ]
list(set1=set1,set2=set2)
}
splits <- splitdf(output, seed = 1001)
str(splits)
lapply(splits, nrow)
lapply(splits, head)
set1 <- splits$set1
set2 <- splits$set2
set.table <- data.frame(Set = c("Set 1", "Set 2"),
Sample = c(nrow(set1), nrow(set2)),
Mean.score = c(mean(set1$score), mean(set2$score)))
pander(set.table)
fit.1 <- sem(model, data = set1)
fit.2 <- sem(model, data = set2)
fit.1.sum <- fitMeasures(fit.1)
fit.2.sum <- fitMeasures(fit.2)
fit.1.value <- parameterEstimates(fit.1)
fit.2.value <- parameterEstimates(fit.2)
result.table.1 <- data.frame(
Set = c("Whole", "Set 1", "Set 2"),
p.value = c(fit_value[5], fit.1.sum[5], fit.2.sum[5]),
CFI = c(fit_value[9], fit.1.sum[9], fit.2.sum[9]),
TLI = c(fit_value[10], fit.1.sum[10], fit.2.sum[10]),
RMSEA = c(fit_value[23], fit.1.sum[23], fit.2.sum[23]),
Att1.Eval.coef = c(fit_sum[11,4], fit.1.value[11,4], fit.2.value[11,4]),
Att1.Eval.z = c(fit_sum[11,6], fit.1.value[11,6], fit.2.value[11,6]),
Att1.Eval.p = c(fit_sum[11,7], fit.1.value[11,7], fit.2.value[11,7]),
Att2.Eval.coef = c(fit_sum[12,4], fit.1.value[12,4], fit.2.value[12,4]),
Att2.Eval.z = c(fit_sum[12,6], fit.1.value[12,6], fit.2.value[12,6]),
Att2.Eval.p = c(fit_sum[12,7], fit.1.value[12,7], fit.2.value[12,7])
)
result.table.1[,2:11] <- round(result.table.1[,2:11], digits = 3)
pander(result.table.1)
plot(as.factor(output[,2]))
plot(as.factor(output[,2]))
par(mfrow = c(5, 2))
plot(as.factor(output[,2]))
plot(as.factor(output[,3]))
plot(as.factor(output[,4]))
plot(as.factor(output[,5]))
plot(as.factor(output[,6]))
plot(as.factor(output[,7]))
plot(as.factor(output[,8]))
plot(as.factor(output[,9]))
plot(as.factor(output[,10]))
hist(output[,11], breaks = 30)
header(output)
head(output)
?plot
